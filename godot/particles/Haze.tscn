[gd_scene load_steps=15 format=2]

[sub_resource type="Gradient" id=32]
offsets = PoolRealArray( 0, 0.451411, 1 )
colors = PoolColorArray( 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0 )

[sub_resource type="GradientTexture" id=33]
gradient = SubResource( 32 )

[sub_resource type="ParticlesMaterial" id=34]
emission_shape = 2
emission_box_extents = Vector3( 10, 1, 1 )
gravity = Vector3( 0, 0, 0 )
scale = 8.0
scale_random = 0.57
color = Color( 0.27451, 0.258824, 0.196078, 1 )
color_ramp = SubResource( 33 )

[sub_resource type="VisualShaderNodeInput" id=35]
input_name = "color"

[sub_resource type="VisualShaderNodeInput" id=36]
input_name = "alpha"

[sub_resource type="VisualShaderNodeFresnel" id=37]
default_input_values = [ 2, true, 3, 2.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=38]
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=39]
uniform_name = "Noise"

[sub_resource type="VisualShaderNodeScalarOp" id=40]
operator = 2

[sub_resource type="VisualShader" id=41]
code = "shader_type spatial;
render_mode depth_draw_never, specular_schlick_ggx, async_visible, unshaded;

uniform sampler2D Noise;



void vertex() {
// Output:0

}

void fragment() {
// Input:2
	vec3 n_out2p0 = COLOR.rgb;

// Input:3
	float n_out3p0 = COLOR.a;

// Fresnel:4
	float n_in4p3 = 2.00000;
	float n_out4p0 = pow(clamp(dot(NORMAL, VIEW), 0.0, 1.0), n_in4p3);

// ScalarOp:5
	float n_out5p0 = n_out3p0 * n_out4p0;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(Noise, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// ScalarOp:7
	float n_out7p0 = n_out5p0 * dot(n_out6p0, vec3(0.333333, 0.333333, 0.333333));

// Output:0
	ALBEDO = n_out2p0;
	ALPHA = n_out7p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -749.001, 164.834 )
modes/depth_draw = 2
flags/unshaded = true
nodes/fragment/2/node = SubResource( 35 )
nodes/fragment/2/position = Vector2( -300, 160 )
nodes/fragment/3/node = SubResource( 36 )
nodes/fragment/3/position = Vector2( -440, 240 )
nodes/fragment/4/node = SubResource( 37 )
nodes/fragment/4/position = Vector2( -520, 340 )
nodes/fragment/5/node = SubResource( 38 )
nodes/fragment/5/position = Vector2( -240, 260 )
nodes/fragment/6/node = SubResource( 39 )
nodes/fragment/6/position = Vector2( -200, 380 )
nodes/fragment/7/node = SubResource( 40 )
nodes/fragment/7/position = Vector2( 80, 240 )
nodes/fragment/connections = PoolIntArray( 3, 0, 5, 0, 4, 0, 5, 1, 5, 0, 7, 0, 2, 0, 0, 0, 7, 0, 0, 1, 6, 0, 7, 1 )

[sub_resource type="OpenSimplexNoise" id=42]
seed = 12
period = 102.3

[sub_resource type="NoiseTexture" id=43]
seamless = true
noise = SubResource( 42 )

[sub_resource type="ShaderMaterial" id=44]
shader = SubResource( 41 )
shader_param/Noise = SubResource( 43 )

[sub_resource type="SphereMesh" id=45]
material = SubResource( 44 )

[node name="Haze" type="Particles"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 4.95094, 0 )
amount = 20
lifetime = 2.51
preprocess = 20.0
local_coords = false
process_material = SubResource( 34 )
draw_pass_1 = SubResource( 45 )
